{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Range","Slider","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","value","i","sliders","toConsumableArray","state","setState","renderSliders","react_default","a","createElement","map","slider","renderSlider","SliderContainer","key","style","sliderLabelContainer","SliderTitle","title_label","SliderLabelContainer","left_label","right_label","onChange","e","DeleteButtonContainer","DeleteButton","onClick","removeSlider","titleChange","objectSpread","new","title","currentTarget","leftChange","left","rightChange","right","renderScore","_this$calculateScore","calculateScore","score","total","ScoreContainer","Score","toFixed","splice","concat","values","obj","forEach","_this2","MainContainer","NewContainer","NewButton","newSlider","InputContainer","Input","Component","styled","input","_templateObject","h3","_templateObject2","div","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","display","flexDirection","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7834741c.chunk.js","sourcesContent":["// @flow\nimport 'rc-slider/assets/index.css';\nimport React, {Component} from 'react';\nimport Slider from 'rc-slider';\nimport styled from 'styled-components';\n\nconst Range = Slider.Range;\n\ntype SliderValue = [number, number, number];\n\ntype SliderType = {\n  title_label: string,\n  left_label: string,\n  right_label: string,\n  value: SliderValue\n}\n\ntype State = {\n  new: {\n    title: string,\n    left: string,\n    right: string,\n  },\n  sliders: Array<SliderType>,\n}\n\ntype Props = {\n  new: {\n    title: string,\n    left: string,\n    right: string,\n  },\n  sliders: Array<SliderType>,\n}\n\nclass App extends Component<State, Props> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      new: {\n        title: '',\n        left: '',\n        right: ''\n      },\n      sliders: [],\n    };\n  }\n\n  handleChange = (value: SliderValue, i: number) => {\n    let sliders = [...this.state.sliders];\n    sliders[i].value = value;\n    this.setState({\n      sliders,\n    });\n  };\n\n  renderSliders = () => {\n    return (\n      <div>\n        {\n          this.state.sliders.map((slider, i) => {\n            return this.renderSlider(slider, i)\n          })\n        }\n      </div>\n    )\n  };\n\n  removeSlider(i: number) {\n    let sliders = [...this.state.sliders];\n    sliders.splice(i, 1);\n    this.setState({\n      sliders,\n    });\n  }\n\n  renderSlider = (slider: Slider, i: number) => {\n    return (\n      <SliderContainer key={i} >\n        <div style={style.sliderLabelContainer}>\n          <SliderTitle>{this.state.sliders[i].title_label}</SliderTitle>\n          <SliderLabelContainer>\n            <p>{this.state.sliders[i].left_label}</p>\n            <p>{this.state.sliders[i].right_label}</p>\n          </SliderLabelContainer>\n        </div>\n        <Range\n          value={this.state.sliders[i].value}\n          onChange={(e) => this.handleChange(e, i)}\n        />\n        <DeleteButtonContainer>\n          <DeleteButton onClick={() => this.removeSlider(i)}>\n           <p>X</p>\n          </DeleteButton>\n        </DeleteButtonContainer>\n      </SliderContainer>\n    );\n  };\n\n  titleChange = (e: SyntheticEvent<HTMLInputElement>) => {\n    this.setState({\n      ...this.state,\n      new: {\n        ...this.state.new,\n        title: e.currentTarget.value\n      }\n    })\n  };\n\n  leftChange = (e: SyntheticEvent<HTMLInputElement>) => {\n    this.setState({\n      ...this.state,\n      new: {\n        ...this.state.new,\n        left: e.currentTarget.value\n      }\n    })\n  };\n\n  rightChange = (e: SyntheticEvent<HTMLInputElement>) => {\n    this.setState({\n      ...this.state,\n      new: {\n        ...this.state.new,\n        right: e.currentTarget.value\n      }\n    })\n  };\n\n  newSlider() {\n    let sliders = [...this.state.sliders];\n    let new_slider = {\n      title_label: this.state.new.title,\n      left_label: this.state.new.left,\n      right_label: this.state.new.right,\n      value: [20, 50, 80],\n    };\n\n    sliders = [new_slider, ...sliders];\n\n    this.setState({\n      new: {\n        title: '',\n        left: '',\n        right: '',\n      },\n      sliders,\n    });\n  }\n\n  calculateScore() {\n    let sliders = [...this.state.sliders];\n    let values = sliders.map((obj) => obj.value);\n    let total = 0;\n    let score = 0;\n    values.forEach(value => {\n        score += value[1] - value[0];\n        total += value[2] - value[0];\n    });\n\n    return { score, total }\n\n  }\n\n  renderScore = () => {\n    let {score, total} = this.calculateScore();\n\n    if (total > 0) {\n      return (\n        <ScoreContainer>\n          <Score>{score} / {total}</Score>\n          <Score>Score: {(score / total).toFixed(3)}</Score>\n        </ScoreContainer>\n      )\n    } else {\n      return <div />\n    }\n  };\n\n  render() {\n    return (\n      <MainContainer>\n        <NewContainer>\n          <NewButton\n            onClick={() => this.newSlider()}>\n            <p>New</p>\n          </NewButton>\n\n          <InputContainer>\n            <p>Title: </p>\n            <Input onChange={(e) => this.titleChange(e)} value={this.state.new.title}/>\n          </InputContainer>\n\n          <InputContainer>\n          <p>Left: </p>\n            <Input onChange={(e) => this.leftChange(e)} value={this.state.new.left}/>\n          </InputContainer>\n\n          <InputContainer>\n            <p>Right:</p>\n            <Input onChange={(e) => this.rightChange(e)}  value={this.state.new.right}/>\n          </InputContainer>\n        </NewContainer>\n        {this.renderScore()}\n        {this.renderSliders()}\n      </MainContainer>\n    );\n  }\n}\n\nconst Input = styled.input`\n    height: 30px;\n    font-size: 20px;\n`;\n\nconst Score = styled.h3`\n  align-self: center;\n  margin: 0;\n  margin-top: 10px;\n`;\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DeleteButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: row;\n`;\n\nconst SliderLabelContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nconst NewContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst MainContainer = styled.div`\n  background-color: whitesmoke;\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n`;\n\nconst SliderTitle = styled.h3`\n  align-self: center\n`;\n\nconst SliderContainer = styled.div`\n  margin: 5px 50px 5px 50px;\n  \n`;\n\nconst InputContainer = styled.div`\n  margin: 10px\n`;\n\nconst NewButton = styled.div`\n    background-color: bisque;\n    width: 100px;\n    padding: 20px;\n    text-align: center;\n    margin: auto 0;\n`;\n\nconst DeleteButton = styled.div`\n    background-color: bisque;\n    width: 50px;\n    padding: 10px;\n    text-align: center;\n    margin: auto 0;\n    margin-top: 30px;\n`;\n\nconst style = {\n  sliderLabelContainer: {display: 'flex', flexDirection: 'column'},\n};\n\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}